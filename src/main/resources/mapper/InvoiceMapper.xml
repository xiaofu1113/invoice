<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.invoice.mapper.InvoiceMapper" >
  <resultMap id="BaseResultMap" type="com.example.invoice.entity.Invoice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="invoice_code" property="invoiceCode" jdbcType="VARCHAR" />
    <result column="invoice_no" property="invoiceNo" jdbcType="VARCHAR" />
    <result column="invoice_amount" property="invoiceAmount" jdbcType="VARCHAR" />
    <result column="invoice_date" property="invoiceDate" jdbcType="TIMESTAMP" />
    <result column="invoice_verify" property="invoiceVerify" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_date" property="lastModifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, invoice_code, invoice_no, invoice_amount, invoice_date, invoice_verify, create_time, 
    last_modify_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.invoice.model.InvoiceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from invoice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from invoice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.invoice.model.InvoiceExample" >
    delete from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.invoice.entity.Invoice" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice (id, invoice_code, invoice_no, 
      invoice_amount, invoice_date, invoice_verify, 
      create_time, last_modify_date)
    values (#{id,jdbcType=INTEGER}, #{invoiceCode,jdbcType=VARCHAR}, #{invoiceNo,jdbcType=VARCHAR}, 
      #{invoiceAmount,jdbcType=VARCHAR}, #{invoiceDate,jdbcType=TIMESTAMP}, #{invoiceVerify,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastModifyDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.invoice.entity.Invoice" >

    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null">
        id,
      </if>
      <if test="invoiceCode != null" >
        invoice_code,
      </if>
      <if test="invoiceNo != null" >
        invoice_no,
      </if>
      <if test="invoiceAmount != null" >
        invoice_amount,
      </if>
      <if test="invoiceDate != null" >
        invoice_date,
      </if>
      <if test="invoiceVerify != null" >
        invoice_verify,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >

      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="invoiceCode != null" >
        #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNo != null" >
        #{invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmount != null" >
        #{invoiceAmount,jdbcType=VARCHAR},
      </if>
      <if test="invoiceDate != null" >
        #{invoiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invoiceVerify != null" >
        #{invoiceVerify,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyDate != null" >
        #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.invoice.model.InvoiceExample" resultType="java.lang.Integer" >
    select count(*) from invoice
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invoice
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceCode != null" >
        invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceNo != null" >
        invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceAmount != null" >
        invoice_amount = #{record.invoiceAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.invoiceDate != null" >
        invoice_date = #{record.invoiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invoiceVerify != null" >
        invoice_verify = #{record.invoiceVerify,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyDate != null" >
        last_modify_date = #{record.lastModifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invoice
    set id = #{record.id,jdbcType=INTEGER},
      invoice_code = #{record.invoiceCode,jdbcType=VARCHAR},
      invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      invoice_amount = #{record.invoiceAmount,jdbcType=VARCHAR},
      invoice_date = #{record.invoiceDate,jdbcType=TIMESTAMP},
      invoice_verify = #{record.invoiceVerify,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_modify_date = #{record.lastModifyDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.invoice.entity.Invoice" >
    update invoice
    <set >
      <if test="invoiceCode != null" >
        invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      </if>
      <if test="invoiceNo != null" >
        invoice_no = #{invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="invoiceAmount != null" >
        invoice_amount = #{invoiceAmount,jdbcType=VARCHAR},
      </if>
      <if test="invoiceDate != null" >
        invoice_date = #{invoiceDate,jdbcType=TIMESTAMP},
      </if>
      <if test="invoiceVerify != null" >
        invoice_verify = #{invoiceVerify,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyDate != null" >
        last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.invoice.entity.Invoice" >
    update invoice
    set invoice_code = #{invoiceCode,jdbcType=VARCHAR},
      invoice_no = #{invoiceNo,jdbcType=VARCHAR},
      invoice_amount = #{invoiceAmount,jdbcType=VARCHAR},
      invoice_date = #{invoiceDate,jdbcType=TIMESTAMP},
      invoice_verify = #{invoiceVerify,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_date = #{lastModifyDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>